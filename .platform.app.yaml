# This file describes an application. You can have multiple applications
# in the same project.

# The name of this app. Must be unique within a project.
name: app

# The type of the application to build.
type: php:8.4

dependencies:
    php:
        composer/composer: '^2'

runtime:
    extensions:
        - redis

build:
    flavor: composer

variables:
    env:
        N_PREFIX: /app/.global
        APP_KEY: "base64:68PBtWYb5g3J0Ln8GTM+6imoVvdgpYsPFPcUqO68sas="
        DB_CONNECTION: mysql
        APP_DEBUG: "true"
        APP_LOCALE: fr
        APP_FALLBACK_LOCALE: fr
        APP_FAKER_LOCALE: en_US
        APP_NAME: "ERP_ESIMED"
        # DB_PORT: 3306
        # DB_DATABASE: "erp"
        # DB_USERNAME: "user"
        # DB_PASSWORD: ""
        # DB_HOST: "db.internal"
        MAIL_MAILER: smtp
        MAIL_HOST: smtp.gmail.com
        MAIL_PORT: 587
        MAIL_USERNAME: matthieusalaun30@gmail.com
        MAIL_PASSWORD: hpbhfsuyyhvosvhk
        MAIL_ENCRYPTION: tls
        MAIL_FROM_ADDRESS: matthieusalaun30@gmail.com
        MAIL_FROM_NAME: "ERP_ESIMED"

hooks:
    build: |
        set -e

        # install a specific NodeJS version https://github.com/platformsh/snippets/
        #   -v requested version
        #   -y install Yarn
        # curl -fsS https://raw.githubusercontent.com/platformsh/snippets/main/src/install_node.sh | { bash /dev/fd/3 -v 17.5 -y; } 3<&0

        # uncomment next line to build assets deploying
        # npm install && npm run production


    deploy: |
        set -e
        php artisan optimize:clear
        php artisan optimize
        php artisan view:cache
        php artisan migrate --force

# The relationships of the application with services or other applications.
# The left-hand side is the name of the relationship as it will be exposed
# to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand
# side is in the form `<service name>:<endpoint name>`.
relationships:
    mariadb: 'mariadb:mysql'
    # rediscache: "cache:redis"
    # redissession: "cache:redis"

# The size of the persistent disk of the application (in MB).
disk: 2048

# The mounts that will be performed when the package is deployed.
mounts:
  "storage/app/public":
      source: local
      source_path: "public"
  "storage/framework/views":
      source: local
      source_path: "views"
  "storage/framework/sessions":
      source: local
      source_path: "sessions"
  "storage/framework/cache":
      source: local
      source_path: "cache"
  "storage/logs":
      source: local
      source_path: "logs"
  "bootstrap/cache":
      source: local
      source_path: "cache"
  "/.config":
      source: local
      source_path: "config"

# The configuration of app when it is exposed to the web.
web:
    locations:
        "/":
            root: "public"
            index:
                - index.php
            allow: true
            passthru: "/index.php"
        "/storage":
            root: "storage/app/public"
            scripts: false

# Note that use of workers require a Medium plan or larger.
workers:
  queue:
    size: S
    commands:
      # To minimize leakage, the queue worker will stop every hour
      # and get restarted automatically.
      start: |
        php artisan queue:work --max-time=3600
    # set the worker's disk to the minimum amount
    disk: 256
  scheduler:
    size: S
    commands:
      start: php artisan schedule:work
    # set the worker's disk to the minimum amount
    disk: 256

crons:
    send-overdue-invoices:
        spec: "0 8 * * *"
        cmd: "php artisan invoices:send-overdue"


source:
  operations:
    auto-update:
      command: |
        curl -fsS https://raw.githubusercontent.com/platformsh/source-operations/main/setup.sh | { bash /dev/fd/3 sop-autoupdate; } 3<&0  